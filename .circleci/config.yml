version: 2.1

workflows:
  build:
    jobs:
      - lint
      - test-mattermost-esr:
          requires:
            - lint
      - test-mattermost-latest:
          requires:
            - lint
      - test-mattermost-previous:
          requires:
            - lint
      - test-mattermost-previous2:
          requires:
            - lint
      - sonarqube:
          requires:
            - lint
            - test-mattermost-esr
            - test-mattermost-latest
 
jobs:
  base: &base
    image: ubuntu-16.04:201903-01
    working_directory: ~/repo
  lint:
    <<: *base
    steps:
      - checkout
      - restore_cache:
          keys:
              - maven-{{ .Branch }}-{{ checksum "pom.xml" }}
              - maven-{{ .Branch }}-
              - maven-
      - run: mvn verify -DskipTests=true --show-version
      - save_cache:
          paths:
              - ~/.m2
          key: maven-{{ .Branch }}-{{ checksum "pom.xml" }}
  test-mattermost-base: &test-mattermost-base
    <<: *base
    steps:
      - checkout
      - run:
          name: run services
          command: docker-compose up -d
      - run: dockerize -wait tcp://127.0.0.1:8065 -timeout 120s
      - restore_cache:
          keys:
              - maven-{{ .Branch }}-{{ checksum "pom.xml" }}
              - maven-{{ .Branch }}-
              - maven-
      - run: mvn verify --show-version
      - save_cache:
          paths:
              - ~/.m2
          key: maven-{{ .Branch }}-{{ checksum "pom.xml" }}
      - run:
          name: Prepare test results
          command: |
              mkdir -p ~/test-results/
              find . -type f -regex ".*/target/failsafe-reports/.*xml" -o -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/test-results/ \;
          when: always
      - store_test_results:
          path: ~/test-results

  test-mattermost-esr:
    <<: *test-mattermost-base
    environment:
      MATTERMOST_VERSION: 5.9.7
  test-mattermost-latest:
    <<: *test-mattermost-base
    environment:
      MATTERMOST_VERSION: 5.18.0
  test-mattermost-previous:
    <<: *test-mattermost-base
    environment:
      MATTERMOST_VERSION: 5.17.2
  test-mattermost-previous2:
    <<: *test-mattermost-base
    environment:
      MATTERMOST_VERSION: 5.16.4
  sonarqube: 
    <<: *test-mattermost-base
    environment:
      MATTERMOST_VERSION: 5.18.0
    steps:
      - checkout
      - run:
          name: run services
          command: docker-compose up -d
      - run: dockerize -wait tcp://127.0.0.1:8065 -timeout 120s
      - restore_cache:
          keys:
              - maven-{{ .Branch }}-{{ checksum "pom.xml" }}
              - maven-{{ .Branch }}-
              - maven-
      - run:
          name: trigger scan 
          command: |
              if [ "${CI_PULL_REQUEST}" = "" ]; then
                  OPTS="-Dsonar.branch.name=${CIRCLE_BRANCH}"
              else
                  OPTS="-Dsonar.pullrequest.key=$(echo $CI_PULL_REQUEST | sed 's/^.*\///') -Dsonar.pullrequest.branch=${CIRCLE_BRANCH}"
              fi
              mvn clean verify sonar:sonar --show-version -s .circleci/settings-sonar.xml $OPTS
      - save_cache:
          paths:
              - ~/.m2
          key: maven-{{ .Branch }}-{{ checksum "pom.xml" }}
      - run:
          name: Prepare test results
          command: |
              mkdir -p ~/test-results/
              find . -type f -regex ".*/target/failsafe-reports/.*xml" -o -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/test-results/ \;
          when: always
      - store_test_results:
          path: ~/test-results
